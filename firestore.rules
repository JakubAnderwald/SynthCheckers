rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read other users' public profiles (for user search and public profiles)
    match /users/{userId} {
      allow read: if request.auth != null && 
                     resource.data.privacySettings.profileVisible == true;
    }
    
    // Game records - players can read/write games they participate in
    match /games/{gameId} {
      allow read, write: if request.auth != null && 
                            (request.auth.uid == resource.data.playerRed.uid || 
                             request.auth.uid == resource.data.playerBlue.uid);
    }
    
    // Friend requests - users can manage their own friend requests
    match /friendRequests/{requestId} {
      allow read, write: if request.auth != null && 
                            (request.auth.uid == resource.data.fromUid || 
                             request.auth.uid == resource.data.toUid);
      // Allow creating new friend requests
      allow create: if request.auth != null && 
                       request.auth.uid == request.resource.data.fromUid;
    }
    
    // Friendships - users can read and write friendships they're part of
    match /friendships/{friendshipId} {
      allow read, write: if request.auth != null && 
                            (request.auth.uid == resource.data.user1Uid || 
                             request.auth.uid == resource.data.user2Uid);
      // Allow creating new friendships when accepting requests
      allow create: if request.auth != null && 
                       (request.auth.uid == request.resource.data.user1Uid || 
                        request.auth.uid == request.resource.data.user2Uid);
    }
    
    // Game challenges - users can manage challenges they send or receive
    match /challenges/{challengeId} {
      allow read, write: if request.auth != null && 
                            (request.auth.uid == resource.data.fromUid || 
                             request.auth.uid == resource.data.toUid);
    }
    
    // Leaderboard - all authenticated users can read
    match /leaderboard/{entry} {
      allow read: if request.auth != null;
    }
    
    // User statistics - all authenticated users can read public stats
    match /userStatistics/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}